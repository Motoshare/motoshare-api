{"version":3,"sources":["motoshare-client/tests/adapters/application.jshint.js","motoshare-client/tests/app.jshint.js","motoshare-client/tests/breakpoints.jshint.js","motoshare-client/tests/components/cycle-map.jshint.js","motoshare-client/tests/components/cycle-pin.jshint.js","motoshare-client/tests/components/nav-bar.jshint.js","motoshare-client/tests/controllers/application.jshint.js","motoshare-client/tests/controllers/login.jshint.js","motoshare-client/tests/controllers/motorcycles.jshint.js","motoshare-client/tests/controllers/passwordreset.jshint.js","motoshare-client/tests/controllers/profile.jshint.js","motoshare-client/tests/controllers/register.jshint.js","motoshare-client/tests/helpers/destroy-app.js","motoshare-client/tests/helpers/destroy-app.jshint.js","motoshare-client/tests/helpers/ember-simple-auth.js","motoshare-client/tests/helpers/errors-text.jshint.js","motoshare-client/tests/helpers/module-for-acceptance.js","motoshare-client/tests/helpers/module-for-acceptance.jshint.js","motoshare-client/tests/helpers/resolver.js","motoshare-client/tests/helpers/resolver.jshint.js","motoshare-client/tests/helpers/responsive.js","motoshare-client/tests/helpers/responsive.jshint.js","motoshare-client/tests/helpers/start-app.js","motoshare-client/tests/helpers/start-app.jshint.js","motoshare-client/tests/initializers/responsive.jshint.js","motoshare-client/tests/integration/components/cycle-map-test.js","motoshare-client/tests/integration/components/cycle-map-test.jshint.js","motoshare-client/tests/integration/components/cycle-pin-test.js","motoshare-client/tests/integration/components/cycle-pin-test.jshint.js","motoshare-client/tests/integration/components/nav-bar-test.js","motoshare-client/tests/integration/components/nav-bar-test.jshint.js","motoshare-client/tests/models/motorcycle.jshint.js","motoshare-client/tests/resolver.jshint.js","motoshare-client/tests/router.jshint.js","motoshare-client/tests/routes/application.jshint.js","motoshare-client/tests/routes/login.jshint.js","motoshare-client/tests/routes/motorcycles.jshint.js","motoshare-client/tests/routes/passwordreset.jshint.js","motoshare-client/tests/routes/profile.jshint.js","motoshare-client/tests/routes/register.jshint.js","motoshare-client/tests/test-helper.js","motoshare-client/tests/test-helper.jshint.js","motoshare-client/tests/transitions.jshint.js","motoshare-client/tests/unit/adapters/application-test.js","motoshare-client/tests/unit/adapters/application-test.jshint.js","motoshare-client/tests/unit/controllers/application-test.js","motoshare-client/tests/unit/controllers/application-test.jshint.js","motoshare-client/tests/unit/controllers/login-test.js","motoshare-client/tests/unit/controllers/login-test.jshint.js","motoshare-client/tests/unit/controllers/motorcycles-test.js","motoshare-client/tests/unit/controllers/motorcycles-test.jshint.js","motoshare-client/tests/unit/controllers/passwordreset-test.js","motoshare-client/tests/unit/controllers/passwordreset-test.jshint.js","motoshare-client/tests/unit/controllers/profile-test.js","motoshare-client/tests/unit/controllers/profile-test.jshint.js","motoshare-client/tests/unit/controllers/register-test.js","motoshare-client/tests/unit/controllers/register-test.jshint.js","motoshare-client/tests/unit/helpers/errors-text-test.js","motoshare-client/tests/unit/helpers/errors-text-test.jshint.js","motoshare-client/tests/unit/models/motorcycle-test.js","motoshare-client/tests/unit/models/motorcycle-test.jshint.js","motoshare-client/tests/unit/routes/application-test.js","motoshare-client/tests/unit/routes/application-test.jshint.js","motoshare-client/tests/unit/routes/login-test.js","motoshare-client/tests/unit/routes/login-test.jshint.js","motoshare-client/tests/unit/routes/motorcycles-test.js","motoshare-client/tests/unit/routes/motorcycles-test.jshint.js","motoshare-client/tests/unit/routes/passwordreset-test.js","motoshare-client/tests/unit/routes/passwordreset-test.jshint.js","motoshare-client/tests/unit/routes/profile-test.js","motoshare-client/tests/unit/routes/profile-test.jshint.js","motoshare-client/tests/unit/routes/register-test.js","motoshare-client/tests/unit/routes/register-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('motoshare-client/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/breakpoints.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | breakpoints.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'breakpoints.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/components/cycle-map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/cycle-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/cycle-map.js should pass jshint.\\ncomponents/cycle-map.js: line 7, col 13, \\'cycles\\' is defined but never used.\\ncomponents/cycle-map.js: line 21, col 102, Missing semicolon.\\ncomponents/cycle-map.js: line 22, col 26, \\'google\\' is not defined.\\ncomponents/cycle-map.js: line 25, col 24, \\'google\\' is not defined.\\ncomponents/cycle-map.js: line 28, col 30, \\'google\\' is not defined.\\ncomponents/cycle-map.js: line 30, col 9, \\'google\\' is not defined.\\ncomponents/cycle-map.js: line 51, col 9, \\'google\\' is not defined.\\ncomponents/cycle-map.js: line 51, col 39, \\'map\\' is not defined.\\ncomponents/cycle-map.js: line 52, col 15, \\'infoWindow\\' is not defined.\\n\\n9 errors');\n  });\n});","define('motoshare-client/tests/components/cycle-pin.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/cycle-pin.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/cycle-pin.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/components/nav-bar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/nav-bar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/nav-bar.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/login.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/motorcycles.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/motorcycles.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/motorcycles.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/passwordreset.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/passwordreset.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/passwordreset.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/profile.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/profile.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/profile.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/controllers/register.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/register.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/register.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('motoshare-client/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  ;\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  ;\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n\n  ;\n});","define('motoshare-client/tests/helpers/errors-text.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/errors-text.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/errors-text.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'motoshare-client/tests/helpers/start-app', 'motoshare-client/tests/helpers/destroy-app'], function (exports, _qunit, _motoshareClientTestsHelpersStartApp, _motoshareClientTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _motoshareClientTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _motoshareClientTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('motoshare-client/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/resolver', ['exports', 'motoshare-client/resolver', 'motoshare-client/config/environment'], function (exports, _motoshareClientResolver, _motoshareClientConfigEnvironment) {\n\n  var resolver = _motoshareClientResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _motoshareClientConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _motoshareClientConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('motoshare-client/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/responsive', ['exports', 'ember', 'ember-responsive/media'], function (exports, _ember, _emberResponsiveMedia) {\n  exports.setBreakpointForIntegrationTest = setBreakpointForIntegrationTest;\n  var getOwner = _ember['default'].getOwner;\n  var classify = _ember['default'].String.classify;\n\n  _emberResponsiveMedia['default'].reopen({\n    // Change this if you want a different default breakpoint in tests.\n    _defaultBreakpoint: 'desktop',\n\n    _breakpointArr: _ember['default'].computed('breakpoints', function () {\n      return Object.keys(this.get('breakpoints')) || _ember['default'].A([]);\n    }),\n\n    _forceSetBreakpoint: function _forceSetBreakpoint(breakpoint) {\n      var found = false;\n\n      var props = {};\n      this.get('_breakpointArr').forEach(function (bp) {\n        var val = bp === breakpoint;\n        if (val) {\n          found = true;\n        }\n\n        props['is' + classify(bp)] = val;\n      });\n\n      if (found) {\n        this.setProperties(props);\n      } else {\n        throw new Error('You tried to set the breakpoint to ' + breakpoint + ', which is not in your app/breakpoint.js file.');\n      }\n    },\n\n    match: function match() {}, // do not set up listeners in test\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this._forceSetBreakpoint(this.get('_defaultBreakpoint'));\n    }\n  });\n\n  exports['default'] = _ember['default'].Test.registerAsyncHelper('setBreakpoint', function (app, breakpoint) {\n    // this should use getOwner once that's supported\n    var mediaService = app.__deprecatedInstance__.lookup('service:media');\n    mediaService._forceSetBreakpoint(breakpoint);\n  });\n\n  function setBreakpointForIntegrationTest(container, breakpoint) {\n    var mediaService = getOwner(container).lookup('service:media');\n    mediaService._forceSetBreakpoint(breakpoint);\n    container.set('media', mediaService);\n\n    return mediaService;\n  }\n});","define('motoshare-client/tests/helpers/responsive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/responsive.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/responsive.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/helpers/start-app', ['exports', 'ember', 'motoshare-client/app', 'motoshare-client/config/environment'], function (exports, _ember, _motoshareClientApp, _motoshareClientConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _motoshareClientConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _motoshareClientApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('motoshare-client/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/initializers/responsive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/responsive.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/responsive.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/integration/components/cycle-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('cycle-map', 'Integration | Component | cycle map', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '9gAJaY/6',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"cycle-map\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'NO7WukJy',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"cycle-map\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('motoshare-client/tests/integration/components/cycle-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/cycle-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/cycle-map-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/integration/components/cycle-pin-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('cycle-pin', 'Integration | Component | cycle pin', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'v5qlHxvJ',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"cycle-pin\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '95IWOKUy',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"cycle-pin\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('motoshare-client/tests/integration/components/cycle-pin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/cycle-pin-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/cycle-pin-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/integration/components/nav-bar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('nav-bar', 'Integration | Component | nav bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'B4I82Wse',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"nav-bar\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'A73jwuQ9',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"nav-bar\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('motoshare-client/tests/integration/components/nav-bar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/nav-bar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/nav-bar-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/models/motorcycle.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/motorcycle.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/motorcycle.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/motorcycles.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/motorcycles.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/motorcycles.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/passwordreset.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/passwordreset.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/passwordreset.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/profile.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/profile.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/profile.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/routes/register.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/register.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/register.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/test-helper', ['exports', 'motoshare-client/tests/helpers/resolver', 'motoshare-client/tests/helpers/responsive', 'ember-qunit'], function (exports, _motoshareClientTestsHelpersResolver, _motoshareClientTestsHelpersResponsive, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_motoshareClientTestsHelpersResolver['default']);\n});","define('motoshare-client/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/transitions.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | transitions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transitions.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('motoshare-client/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:login', 'Unit | Controller | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/login-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/motorcycles-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:motorcycles', 'Unit | Controller | motorcycles', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/motorcycles-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/motorcycles-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/motorcycles-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/passwordreset-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:passwordreset', 'Unit | Controller | passwordreset', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/passwordreset-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/passwordreset-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/passwordreset-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/profile-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:profile', 'Unit | Controller | profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/profile-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/profile-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/profile-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/controllers/register-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:register', 'Unit | Controller | register', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('motoshare-client/tests/unit/controllers/register-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/register-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/register-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/helpers/errors-text-test', ['exports', 'motoshare-client/helpers/errors-text', 'qunit'], function (exports, _motoshareClientHelpersErrorsText, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | errors text');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _motoshareClientHelpersErrorsText.errorsText)([42]);\n    assert.ok(result);\n  });\n});","define('motoshare-client/tests/unit/helpers/errors-text-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/errors-text-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/errors-text-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/models/motorcycle-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('motorcycle', 'Unit | Model | motorcycle', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('motoshare-client/tests/unit/models/motorcycle-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/motorcycle-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/motorcycle-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/motorcycles-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:motorcycles', 'Unit | Route | motorcycles', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/motorcycles-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/motorcycles-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/motorcycles-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/passwordreset-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:passwordreset', 'Unit | Route | passwordreset', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/passwordreset-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/passwordreset-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/passwordreset-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/profile-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:profile', 'Unit | Route | profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/profile-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/profile-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/profile-test.js should pass jshint.');\n  });\n});","define('motoshare-client/tests/unit/routes/register-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:register', 'Unit | Route | register', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('motoshare-client/tests/unit/routes/register-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/register-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/register-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('motoshare-client/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}